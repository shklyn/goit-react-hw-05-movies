{"version":3,"file":"static/js/103.8a839627.chunk.js","mappings":"sSAEaA,EAAYC,EAAAA,EAAAA,IAAH,2IAOTC,EAAYD,EAAAA,EAAAA,GAAH,oIAOTE,EAAgBF,EAAAA,EAAAA,GAAH,+KAUbG,EAAgBH,EAAAA,EAAAA,GAAH,+iBAqBbI,EAAmBJ,EAAAA,EAAAA,IAAH,yCAIhBK,EAAmBL,EAAAA,EAAAA,EAAH,8J,SCO7B,EA7Ca,WACX,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAwBjB,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,iHAEMC,EAAAA,EAAAA,IAAA,gEATf,qCAOS,OAEXC,EAFW,OAKXC,EAAOD,EAASC,KAAKC,QACrBC,EAAeF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,MAAuC,CACnEH,GAAAA,EACAC,MAAOA,GAASC,EAChBE,OAAO,kCAAD,OAAoCD,GAHd,IAM9Bd,EAAUS,GAZO,gDAcjBO,QAAQC,IAAR,MAdiB,yDAAH,qDAkBlBb,GACD,GAAE,KAGD,UAACb,EAAD,YACE,SAACE,EAAD,8BACA,SAACC,EAAD,UACGK,EAAOW,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOG,EAAa,EAAbA,OACxB,OACE,SAACpB,EAAD,WACE,UAAC,KAAD,CAAMuB,GAAE,iBAAYP,GAAMQ,MAAO,CAAEC,KAAMnB,GAAzC,WACE,SAACL,EAAD,CAAkByB,IAAKN,EAAQO,IAAKV,KACpC,SAACf,EAAD,UAAmBe,QAHHD,EAOvB,QAIR,C","sources":["components/Home/Home.styled.jsx","components/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 30px;\n  box-shadow: 0px 0px 9px 5px rgba(0, 0, 0, 0.67);\n  background-color: #adb8ff;\n  width: 100%;\n`;\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  padding: 20px;\n  color: #1744be;\n    text-shadow: 0 0 3px rgba(0, 0, 255, 0.8);\n`;\n\nexport const MoviesPopList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  padding: 10px 20px;\n`;\n\nexport const MoviesPopItem = styled.li`\n  border-radius: 8px;\n    overflow: hidden;\n   background-color: rgb(2 152 190 / 50%);\n    display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 300px;\n    transition-duration: 250ms;\n  transition-property: scale;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    scale: 1.02;\n    box-shadow: 0px 1px 2px rgb(255 0 249 / 31%),\n      0px 2px 4px rgb(255 0 245 / 50%), 0px 4px 8px rgb(255 235 0 / 31%),\n      0px 8px 16px rgb(255 247 254 / 35%);\n  }\n`;\n\nexport const MoviesPopItemImg = styled.img`\n  width: 300px;\n`;\n\nexport const MoviesPopItemPrg = styled.p`\n    height: 50px;\n    color: #212121;\n    text-align: center;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 15px;\n}`;","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport {\n  Container,\n  MoviesPopItem,\n  MoviesPopItemImg,\n  MoviesPopItemPrg,\n  MoviesPopList,\n  PageTitle,\n} from './Home.styled';\nconst API_KEY = '4bc6cd41da8136f9d881653d0e323d21';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getPopMovies = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n        );\n        const data = response.data.results;\n        const filteredData = data.map(({ id, title, name, poster_path }) => ({\n          id,\n          title: title || name,\n          poster: `https://image.tmdb.org/t/p/w500${poster_path}`,\n        }));\n\n        setMovies(filteredData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getPopMovies();\n  }, []);\n\n  return (\n    <Container>\n      <PageTitle>Tranding today</PageTitle>\n      <MoviesPopList>\n        {movies.map(({ id, title, poster }) => {\n          return (\n            <MoviesPopItem key={id}>\n              <Link to={`movies/${id}`} state={{ from: location }}>\n                <MoviesPopItemImg src={poster} alt={title} />\n                <MoviesPopItemPrg>{title}</MoviesPopItemPrg>\n              </Link>\n            </MoviesPopItem>\n          );\n        })}\n      </MoviesPopList>\n    </Container>\n  );\n};\n\nexport default Home;"],"names":["Container","styled","PageTitle","MoviesPopList","MoviesPopItem","MoviesPopItemImg","MoviesPopItemPrg","useState","movies","setMovies","location","useLocation","useEffect","getPopMovies","axios","response","data","results","filteredData","map","id","title","name","poster_path","poster","console","log","to","state","from","src","alt"],"sourceRoot":""}